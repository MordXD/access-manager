apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "access-manager.fullname" . }}
  labels:
    {{- include "access-manager.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "access-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "access-manager.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "access-manager.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: db-migration
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: ["poetry", "run", "alembic", "upgrade", "head"]
        env:
        - name: DATABASE_URL
          value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?sslmode={{ .Values.database.sslmode }}"
        - name: SECRET_KEY
          value: {{ .Values.app.secretKey | quote }}
        - name: ALGORITHM
          value: {{ .Values.app.algorithm | quote }}
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          value: {{ .Values.app.accessTokenExpireMinutes | quote }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: DATABASE_URL
          value: "postgresql://{{ .Values.database.user }}:{{ .Values.database.password }}@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?sslmode={{ .Values.database.sslmode }}"
        - name: SECRET_KEY
          value: {{ .Values.app.secretKey | quote }}
        - name: ALGORITHM
          value: {{ .Values.app.algorithm | quote }}
        - name: ACCESS_TOKEN_EXPIRE_MINUTES
          value: {{ .Values.app.accessTokenExpireMinutes | quote }}
        - name: ENVIRONMENT
          value: {{ .Values.app.environment | quote }}
        {{- if .Values.healthCheck.enabled }}
        livenessProbe:
          {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
        readinessProbe:
          {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-tmp
          mountPath: /var/tmp
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 